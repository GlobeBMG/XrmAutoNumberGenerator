//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.XrmAutoNumberGenerator.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "7.1.0001.3108")]
	public enum dlab_AutoNumberingState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Entity to control the auto numbering of auto numbers
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("dlab_autonumbering")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "7.1.0001.3108")]
	public partial class dlab_AutoNumbering : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string dlab_AllowExternalInitialization = "dlab_allowexternalinitialization";
			public const string dlab_AttributeName = "dlab_attributename";
			public const string dlab_AutoNumberingId = "dlab_autonumberingid";
			public const string Id = "dlab_autonumberingid";
			public const string dlab_EntityName = "dlab_entityname";
			public const string dlab_FixedNumberSize = "dlab_fixednumbersize";
			public const string dlab_IncrementStepSize = "dlab_incrementstepsize";
			public const string dlab_name = "dlab_name";
			public const string dlab_NextNumber = "dlab_nextnumber";
			public const string dlab_PadWithZeros = "dlab_padwithzeros";
			public const string dlab_PluginExecutionOrder = "dlab_pluginexecutionorder";
			public const string dlab_PluginStepId = "dlab_pluginstepid";
			public const string dlab_Postfix = "dlab_postfix";
			public const string dlab_Prefix = "dlab_prefix";
			public const string dlab_ServerBatchSize = "dlab_serverbatchsize";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public dlab_AutoNumbering() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "dlab_autonumbering";
		
		public const int EntityTypeCode = 10005;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		/// <summary>
		/// Controls if a auto-number will be used to override an initalized value  Allows another plugin/system when inserting new records to populate, the normally auto-generated attribute
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_allowexternalinitialization")]
		public System.Nullable<bool> dlab_AllowExternalInitialization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dlab_allowexternalinitialization");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_AllowExternalInitialization");
				this.SetAttributeValue("dlab_allowexternalinitialization", value);
				this.OnPropertyChanged("dlab_AllowExternalInitialization");
			}
		}
		
		/// <summary>
		/// The attribute logical name of the attribute to use to store the auto-generated id value
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_attributename")]
		public string dlab_AttributeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dlab_attributename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_AttributeName");
				this.SetAttributeValue("dlab_attributename", value);
				this.OnPropertyChanged("dlab_AttributeName");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_autonumberingid")]
		public System.Nullable<System.Guid> dlab_AutoNumberingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("dlab_autonumberingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_AutoNumberingId");
				this.SetAttributeValue("dlab_autonumberingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("dlab_AutoNumberingId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_autonumberingid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.dlab_AutoNumberingId = value;
			}
		}
		
		/// <summary>
		/// The logical name of the entity to autonumber for
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_entityname")]
		public string dlab_EntityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dlab_entityname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_EntityName");
				this.SetAttributeValue("dlab_entityname", value);
				this.OnPropertyChanged("dlab_EntityName");
			}
		}
		
		/// <summary>
		/// The number of digits the number portion of the generated number should pad
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_fixednumbersize")]
		public System.Nullable<int> dlab_FixedNumberSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dlab_fixednumbersize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_FixedNumberSize");
				this.SetAttributeValue("dlab_fixednumbersize", value);
				this.OnPropertyChanged("dlab_FixedNumberSize");
			}
		}
		
		/// <summary>
		/// The size to increment each number by.  Helpful if you want to be able to set each environment to have it's own base
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_incrementstepsize")]
		public System.Nullable<int> dlab_IncrementStepSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dlab_incrementstepsize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_IncrementStepSize");
				this.SetAttributeValue("dlab_incrementstepsize", value);
				this.OnPropertyChanged("dlab_IncrementStepSize");
			}
		}
		
		/// <summary>
		/// The name of the Auto Numbering
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_name")]
		public string dlab_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dlab_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_name");
				this.SetAttributeValue("dlab_name", value);
				this.OnPropertyChanged("dlab_name");
			}
		}
		
		/// <summary>
		/// The Initial/Next Number to be used when generating a new number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_nextnumber")]
		public System.Nullable<int> dlab_NextNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dlab_nextnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_NextNumber");
				this.SetAttributeValue("dlab_nextnumber", value);
				this.OnPropertyChanged("dlab_NextNumber");
			}
		}
		
		/// <summary>
		/// Defines if the generated number will be left padded with zeros
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_padwithzeros")]
		public System.Nullable<bool> dlab_PadWithZeros
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dlab_padwithzeros");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_PadWithZeros");
				this.SetAttributeValue("dlab_padwithzeros", value);
				this.OnPropertyChanged("dlab_PadWithZeros");
			}
		}
		
		/// <summary>
		/// Allows for control of when the plugin is registered to be executed in the plugin event pipeline
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_pluginexecutionorder")]
		public System.Nullable<int> dlab_PluginExecutionOrder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dlab_pluginexecutionorder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_PluginExecutionOrder");
				this.SetAttributeValue("dlab_pluginexecutionorder", value);
				this.OnPropertyChanged("dlab_PluginExecutionOrder");
			}
		}
		
		/// <summary>
		/// The Plugin Step Id Guid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_pluginstepid")]
		public string dlab_PluginStepId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dlab_pluginstepid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_PluginStepId");
				this.SetAttributeValue("dlab_pluginstepid", value);
				this.OnPropertyChanged("dlab_PluginStepId");
			}
		}
		
		/// <summary>
		/// The postfix to use when generating the auto-number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_postfix")]
		public string dlab_Postfix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dlab_postfix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_Postfix");
				this.SetAttributeValue("dlab_postfix", value);
				this.OnPropertyChanged("dlab_Postfix");
			}
		}
		
		/// <summary>
		/// The prefix to use when generating the auto-number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_prefix")]
		public string dlab_Prefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dlab_prefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_Prefix");
				this.SetAttributeValue("dlab_prefix", value);
				this.OnPropertyChanged("dlab_Prefix");
			}
		}
		
		/// <summary>
		/// Optimization to reserve a batch of auto-generated numbers, in-memory.  Could result in potential "gaps" in auto-generated numbers if the CRM server app pool is reset.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dlab_serverbatchsize")]
		public System.Nullable<int> dlab_ServerBatchSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dlab_serverbatchsize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dlab_ServerBatchSize");
				this.SetAttributeValue("dlab_serverbatchsize", value);
				this.OnPropertyChanged("dlab_ServerBatchSize");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the Auto Numbering
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<DLaB.XrmAutoNumberGenerator.Entities.dlab_AutoNumberingState> statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((DLaB.XrmAutoNumberGenerator.Entities.dlab_AutoNumberingState)(System.Enum.ToObject(typeof(DLaB.XrmAutoNumberGenerator.Entities.dlab_AutoNumberingState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("statecode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("statecode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Auto Numbering
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("statuscode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("statuscode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public dlab_AutoNumbering(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["dlab_autonumberingid"] = base.Id;
                        break;
                    case "dlab_autonumberingid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}